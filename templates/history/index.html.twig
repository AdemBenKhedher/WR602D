{% extends 'base.html.twig' %}

{% block title %}Historique{% endblock %}

{% block body %}
<div class="history-dashboard">
    <div class="stats-card">
        <div class="stats-icon">
            <i class="fas fa-chart-bar"></i>
        </div>
        <div class="stats-content">
            <h2>Historique des documents</h2>
            <div class="stats-counter">
                <span class="counter-value">{{ totalCount }}</span>
                <span class="counter-label">PDF{% if totalCount > 1 %}s{% endif %} générés dont<strong> {{ count }}</strong> aujourd'hui</span>
                
            </div>
        </div>
    </div>

    <div class="history-content">
        {% if history is empty %}
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-file-pdf"></i>
                </div>
                <h3>Aucun document généré</h3>
                <p>Vous n'avez pas encore généré de documents PDF.</p>
                <a href="{{ path('generate_pdf') }}" class="btn-primary">
                    <i class="fas fa-plus"></i> Générer un document
                </a>
            </div>
        {% else %}
            <div class="history-filters">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="documentSearch" placeholder="Rechercher un document...">
                </div>
                <div class="sort-controls">
                    <span>Trier par:</span>
                    <button class="sort-btn active" data-sort="date">Date <i class="fas fa-sort-down"></i></button>
                    <button class="sort-btn" data-sort="name">Nom <i class="fas fa-sort"></i></button>
                </div>
            </div>

            <div class="documents-grid">
                {% for file in history %}
                    {% set fileNameParts = file.name|split('_') %}
                    {% set cleanName = fileNameParts|length > 1 ? fileNameParts[1:] %}
                    {% set displayName = cleanName|join('_')|replace({'.pdf': ''}) %}
                    
                    <div class="document-card" data-name="{{ displayName }}" data-date="{{ file.createdAt|date('Ymd') }}">
                        <div class="document-preview">
                            <div class="preview-placeholder">
                                <i class="fas fa-file-pdf"></i>
                                <span class="preview-hover">Prévisualiser</span>
                            </div>
                            <div class="document-actions">
                                <a href="{{ asset('Pdfs/' ~ file.name) }}" class="action-btn download" title="Télécharger" download>
                                    <i class="fas fa-download"></i>
                                </a>
                                <button class="action-btn preview" title="Prévisualiser" data-pdf="{{ asset('Pdfs/' ~ file.name) }}">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="document-info">
                            <h4 class="document-title">
                                {% if displayName|length > 0 %}
                                    {{ displayName|capitalize }}
                                {% else %}
                                    Document #{{ loop.index }}
                                {% endif %}
                            </h4>
                            <div class="document-meta">
                                <span class="meta-date">
                                    <i class="fas fa-calendar-alt"></i>
                                    {{ file.createdAt|date('d/m/Y') }}
                                </span>
                                <span class="meta-time">
                                    <i class="fas fa-clock"></i>
                                    {{ file.createdAt|date('H:i') }}
                                </span>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>
</div>

<!-- PDF Preview Modal -->
<div id="pdfPreviewModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Prévisualisation du document</h3>
            <button class="close-modal">&times;</button>
        </div>
        <div class="modal-body">
            <iframe id="pdfViewer" src="" frameborder="0"></iframe>
        </div>
        <div class="modal-footer">
            <a id="downloadBtn" href="" download class="btn-primary">
                <i class="fas fa-download"></i> Télécharger
            </a>
            <button class="btn-secondary close-modal">
                <i class="fas fa-times"></i> Fermer
            </button>
        </div>
    </div>
</div>
{% endblock %}
{% block stylesheets %}
<style>
    .history-dashboard {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .stats-card {
        display: flex;
        align-items: center;
        background: linear-gradient(135deg, #6e8efb, #4a6cf7);
        border-radius: 1rem;
        padding: 2rem;
        margin-bottom: 2rem;
        color: #fff;
        box-shadow: 0 10px 30px rgba(74, 108, 247, 0.3);
    }

    .stats-icon {
        font-size: 3.5rem;
        margin-right: 2rem;
        opacity: 0.8;
    }

    .stats-content h2 {
        margin: 0;
        font-weight: 600;
        font-size: 1.6rem;
    }

    .stats-counter {
        display: flex;
        align-items: baseline;
        margin-top: 0.5rem;
    }

    .counter-value {
        font-size: 3rem;
        font-weight: 700;
        margin-right: 0.5rem;
    }

    .counter-label {
        font-size: 1.2rem;
        opacity: 0.9;
    }

    .history-content {
        background: #fff;
        border-radius: 1rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        padding: 2rem;
    }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
    }

    .empty-icon {
        font-size: 5rem;
        color: #d1d9e6;
        margin-bottom: 1rem;
    }

    .empty-state h3 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        color: #4a5568;
    }

    .empty-state p {
        color: #718096;
        margin-bottom: 2rem;
    }

    .history-filters {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .search-box {
        position: relative;
        flex-grow: 1;
        max-width: 400px;
    }

    .search-box i {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #a0aec0;
    }

    .search-box input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border-radius: 0.5rem;
        border: 1px solid #e2e8f0;
        font-size: 0.95rem;
        transition: all 0.3s;
    }

    .search-box input:focus {
        outline: none;
        border-color: #4a6cf7;
        box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.2);
    }

    .sort-controls {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .sort-controls span {
        color: #718096;
        font-size: 0.9rem;
    }

    .sort-btn {
        background: none;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
    }

    .sort-btn:hover, .sort-btn.active {
        background-color: #f7fafc;
        border-color: #cbd5e0;
    }

    .sort-btn.active {
        color: #4a6cf7;
        font-weight: 600;
    }

    .documents-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .document-card {
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s, box-shadow 0.3s;
        background: #fff;
        border: 1px solid #edf2f7;
    }

    .document-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    .document-preview {
        height: 160px;
        background-color: #f8fafc;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .preview-placeholder {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: #4a6cf7;
    }

    .preview-placeholder i {
        font-size: 3rem;
        margin-bottom: 0.5rem;
    }

    .preview-hover {
        font-size: 0.85rem;
        opacity: 0;
        transition: opacity 0.3s;
        background: rgba(74, 108, 247, 0.9);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
    }

    .document-preview:hover .preview-hover {
        opacity: 1;
    }

    .document-actions {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 2rem;
        height: 2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        background: white;
        border: none;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: all 0.2s;
        cursor: pointer;
        color: #4a5568;
    }

    .action-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
    }

    .action-btn.download:hover {
        color: #4a6cf7;
    }

    .action-btn.preview:hover {
        color: #4a6cf7;
    }

    .document-info {
        padding: 1rem;
    }

    .document-title {
        margin: 0 0 0.5rem;
        font-size: 1rem;
        font-weight: 600;
        color: #2d3748;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .document-meta {
        display: flex;
        font-size: 0.8rem;
        color: #718096;
        gap: 1rem;
    }

    .document-meta i {
        margin-right: 0.25rem;
    }

    .btn-primary {
        background-color: #4a6cf7;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
        transition: all 0.3s;
        box-shadow: 0 4px 12px rgba(74, 108, 247, 0.25);
    }

    .btn-primary:hover {
        background-color: #3a5bef;
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(74, 108, 247, 0.35);
    }

    .btn-secondary {
        background-color: #e2e8f0;
        color: #4a5568;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s;
    }

    .btn-secondary:hover {
        background-color: #cbd5e0;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .modal.show {
        opacity: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        width: 90%;
        max-width: 900px;
        height: 80%;
        max-height: 800px;
        border-radius: 1rem;
        display: flex;
        flex-direction: column;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
        transform: translateY(20px);
        transition: transform 0.3s;
    }

    .modal.show .modal-content {
        transform: translateY(0);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .modal-header h3 {
        margin: 0;
        font-size: 1.3rem;
        color: #2d3748;
    }

    .close-modal {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #a0aec0;
        transition: color 0.2s;
    }

    .close-modal:hover {
        color: #4a5568;
    }

    .modal-body {
        flex-grow: 1;
        overflow: hidden;
    }

    .modal-body iframe {
        width: 100%;
        height: 100%;
        border: none;
    }

    .modal-footer {
        padding: 1rem 1.5rem;
        border-top: 1px solid #e2e8f0;
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
    }

    @media (max-width: 768px) {
        .stats-card {
            flex-direction: column;
            text-align: center;
            padding: 1.5rem;
        }
        
        .stats-icon {
            margin-right: 0;
            margin-bottom: 1rem;
        }
        
        .history-filters {
            flex-direction: column;
            align-items: stretch;
        }
        
        .search-box {
            max-width: none;
        }
    }
</style>
{% endblock %}
{% block javascripts %}

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Search functionality
    const searchInput = document.getElementById('documentSearch');
    if (searchInput) {
        searchInput.addEventListener('input', function() {
            const query = this.value.toLowerCase();
            const cards = document.querySelectorAll('.document-card');
            
            cards.forEach(card => {
                const name = card.getAttribute('data-name').toLowerCase();
                if (name.includes(query)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    }

    // Sorting functionality
    const sortButtons = document.querySelectorAll('.sort-btn');
    sortButtons.forEach(button => {
        button.addEventListener('click', function() {
            const sortType = this.getAttribute('data-sort');
            
            // Update active state
            sortButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // Update sort icon
            const icon = this.querySelector('i');
            sortButtons.forEach(btn => btn.querySelector('i').className = 'fas fa-sort');
            
            // Toggle sort direction
            if (icon.classList.contains('fa-sort-down')) {
                icon.className = 'fas fa-sort-up';
                sortDocuments(sortType, 'asc');
            } else {
                icon.className = 'fas fa-sort-down';
                sortDocuments(sortType, 'desc');
            }
        });
    });

    // Function to sort documents
    function sortDocuments(type, direction) {
        const grid = document.querySelector('.documents-grid');
        const cards = Array.from(grid.children);
        
        cards.sort((a, b) => {
            const valueA = a.getAttribute('data-' + type);
            const valueB = b.getAttribute('data-' + type);
            
            if (direction === 'asc') {
                return valueA.localeCompare(valueB);
            } else {
                return valueB.localeCompare(valueA);
            }
        });
        
        // Reorder elements
        grid.innerHTML = '';
        cards.forEach(card => grid.appendChild(card));
    }

    // PDF Preview Modal
    const modal = document.getElementById('pdfPreviewModal');
    const previewButtons = document.querySelectorAll('.action-btn.preview');
    const closeButtons = document.querySelectorAll('.close-modal');
    const pdfViewer = document.getElementById('pdfViewer');
    const downloadBtn = document.getElementById('downloadBtn');
    
    previewButtons.forEach(button => {
        button.addEventListener('click', function() {
            const pdfUrl = this.getAttribute('data-pdf');
            pdfViewer.src = pdfUrl;
            downloadBtn.href = pdfUrl;
            modal.classList.add('show');
            document.body.style.overflow = 'hidden';
        });
    });
    
    closeButtons.forEach(button => {
        button.addEventListener('click', function() {
            modal.classList.remove('show');
            setTimeout(() => {
                pdfViewer.src = '';
                document.body.style.overflow = '';
            }, 300);
        });
    });
    
    modal.addEventListener('click', function(event) {
        if (event.target === modal) {
            modal.classList.remove('show');
            setTimeout(() => {
                pdfViewer.src = '';
                document.body.style.overflow = '';
            }, 300);
        }
    });
});
</script>
{% endblock %}
